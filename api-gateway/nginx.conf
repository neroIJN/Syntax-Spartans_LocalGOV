events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Upstream services
    upstream iam-service {
        server iam-service:3000;
    }

    upstream servicedirectory-service {
        server servicedirectory-service:3000;
    }

    upstream appointment-booking-service {
        server appointment-booking-service:8080;
    }

    upstream document-management-service {
        server document-management-service:8000;
    }

    upstream payment-service {
        server payment-service:3000;
    }

    upstream notification-service {
        server notification-service:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Enable CORS
        include /etc/nginx/cors.conf;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Gateway Routes
        
        # Authentication & User Management
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://iam-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Service Directory
        location /api/services/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://servicedirectory-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Appointments
        location /api/appointments/ {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://appointment-booking-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Document Management
        location /api/documents/ {
            limit_req zone=api burst=10 nodelay;
            client_max_body_size 50M;
            proxy_pass http://document-management-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
        }

        # Payments
        location /api/payments/ {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://payment-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Notifications
        location /api/notifications/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://notification-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default route for unmatched requests
        location / {
            return 404 '{"error": "API endpoint not found", "message": "Please check the API documentation"}';
            add_header Content-Type application/json;
        }
    }
}
